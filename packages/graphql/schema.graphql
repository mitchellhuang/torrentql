# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type ApiKey {
  id: ID!
  name: String!
  key: String
  createdAt: DateTime!
}

"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
BigInt can represent values between -(2^53) + 1 and 2^53 - 1. 
"""
scalar BigInt

type BitcoinTransaction {
  id: ID!
  status: String!
  amount: Float!
  amountSatoshi: BigInt!
  invoiceUrl: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Mutation {
  createBitcoinTransaction(amount: Float!): BitcoinTransaction!
  createApiKey(name: String!): ApiKey!
  deleteApiKey(id: String!): Boolean!
  addTorrent(data: String!): Torrent!
  deleteTorrent(id: String!): Boolean!
  pauseTorrent(id: String!): Boolean!
  resumeTorrent(id: String!): Boolean!
  login(email: String!, password: String!): User!
  createUser(email: String!, password: String!): User!
  sendPasswordResetEmail(email: String!): Boolean!
  updateUserEmail(email: String!): User!
  updateUserPassword(oldPassword: String!, password: String!): User!
  updateForgottenPasswordMutation(password: String!, token: String!): User!
  deleteUser: Boolean!
}

type PasswordReset {
  id: ID!
  hash: String!
  email: String!
  expiryDate: DateTime!
}

type Query {
  getTorrent(id: String!): Torrent!
  getTorrents: [Torrent!]!
  me: User!
}

type Server {
  id: ID!
  region: String!
}

type Torrent {
  id: ID!
  hash: String!
  name: String!
  state: String!
  progress: Float!
  ratio: Float!
  totalSize: BigInt!
  uploadSpeed: Int!
  downloadSpeed: Int!
  eta: Int!
  numPeers: Int!
  numSeeds: Int!
  totalPeers: Int!
  totalSeeds: Int!
  totalWanted: BigInt!
  totalUploaded: BigInt!
  totalDownloaded: BigInt!
  tracker: String!
  trackerHost: String!
  trackerStatus: String!
  files: JSON!
  user: User!
  server: Server!
}

type User {
  id: ID!
  email: String!
  balance: Float!
  token: String
  torrents: [Torrent!]!
  apiKeys: [ApiKey!]!
  bitcoinTransactions: [BitcoinTransaction!]!
}
